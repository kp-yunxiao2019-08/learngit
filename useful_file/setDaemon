元培笔记

- `traceback`（用在打印日志）

  - 会打印异常代码所在行(文件待测)

  - ```python
    import traceback
    
    try:
        1/0
    except Exception as err:
        a = traceback.format_exc()
        print(a)
        traceback.print_exc()
    ```

  - ```
    结果：
    Traceback (most recent call last):
      File "/Users/iyx/Desktop/code/traceback_demo.py", line 4, in <module>
        1/0
    ZeroDivisionError: division by zero
    
    Traceback (most recent call last):
      File "/Users/iyx/Desktop/code/traceback_demo.py", line 4, in <module>
        1/0
    ZeroDivisionError: division by zero
    ```

  - `traceback.format_exc`

    - 返回异常情况字符串

  - `traceback.print_exc`

    - 直接打印异常情况字符串（可打印到文件

- `threading`

  - threading.setDaemon将线程设置为后台线程，默认为前台线程

  - 【setDaemon需要在start方法调用之前使用】

  - 前台线程、后台线程区别

    - 后台线程：当主线程退出时,后台线程立即退出
    - 前台线程：当主线程退出时,若前台线程还未结束,则等待所有线程结束

  - ```python
    import time
    from hashlib import md5
    from threading import Thread
    
    def pmd(md):
        time.sleep(3) #使用sleep使得该线程比主线程晚结束
        print("backend recording:",md)
    
    
    def giveures(s):
        res = 0
        t = Thread(target=pmd,args=(s,))
        # t.setDaemon(True) #默认情况:t.setDaemon(False)
        t.start()
        return res
    
    s = 'chrisyang'
    res = giveures(s)
    print(res)
    exit()
    
    ```

  - 注释掉`t.setDaemon(True)`打印两行

  - 解开注释打印1行

